# hvisor Github Actions CI
# wheatfox <wheatfox17@icloud.com>
#
# 此工作流已更新为使用预构建的 Docker 容器，并修复了在 GitHub Actions 环境中的网络、权限和交叉编译问题。

name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

env:
  MODE: debug
  #
  # ============================== 重要 ==============================
  # 请将下面的路径替换为您在容器仓库中的 CI 镜像路径。
  #
  CI_IMAGE: ghcr.io/wheatfox/hvisor:ci-latest # <-- 请务必替换此行为您自己的镜像路径!

jobs:
  linter:
    name: linter
    runs-on: ubuntu-latest
    container: ghcr.io/jaxtonmax/hvisor-ci:wzm
    env:
      RUSTUP_DIST_SERVER: "https://static.rust-lang.org"
      RUSTUP_UPDATE_ROOT: "https://static.rust-lang.org/rustup"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Disable rustup auto update
        run: rustup set auto-self-update disable
      - name: Format Check
        run: make fmt-test

  unittest:
    name: unittest
    runs-on: ubuntu-latest
    container: ghcr.io/jaxtonmax/hvisor-ci:wzm
    env:
      RUSTUP_DIST_SERVER: "https://static.rust-lang.org"
      RUSTUP_UPDATE_ROOT: "https://static.rust-lang.org/rustup"
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64
            board: "qemu-gicv3"
          - arch: aarch64
            board: "qemu-gicv2"
          - arch: riscv64
            board: "qemu-plic"
          - arch: riscv64
            board: "qemu-aia"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Disable rustup auto update
        run: rustup set auto-self-update disable
      - name: Set up environment variables
        run: |
          echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "BOARD=${{ matrix.board }}" >> $GITHUB_ENV
      - name: Unit Test
        run: make test

  build:
    name: build
    runs-on: ubuntu-latest
    container: ghcr.io/jaxtonmax/hvisor-ci:wzm
    env:
      RUSTUP_DIST_SERVER: "https://static.rust-lang.org"
      RUSTUP_UPDATE_ROOT: "https://static.rust-lang.org/rustup"
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64
            board: "qemu-gicv3"
          - arch: aarch64
            board: "qemu-gicv2"
          - arch: aarch64
            board: "zcu102"
          - arch: aarch64
            board: "imx8mp"
          - arch: aarch64
            board: "rk3568"
          - arch: aarch64
            board: "rk3588"
          - arch: aarch64
            board: "ok6254-c"
          - arch: riscv64
            board: "qemu-aia"
          - arch: riscv64
            board: "qemu-plic"
          - arch: loongarch64
            board: "ls3a5000"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Disable rustup auto update
        run: rustup set auto-self-update disable
      - name: Set up environment variables
        run: |
          echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "BOARD=${{ matrix.board }}" >> $GITHUB_ENV
      - name: Build
        run: make

  systemtest:
    name: systemtest
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/jaxtonmax/hvisor-ci:wzm
      options: --privileged
    env:
      RUSTUP_DIST_SERVER: "https://static.rust-lang.org"
      RUSTUP_UPDATE_ROOT: "https://static.rust-lang.org/rustup"
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64
            board: "qemu-gicv3"
          - arch: riscv64
            board: "qemu-plic"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Disable rustup auto update
        run: rustup set auto-self-update disable
      - name: Set up environment variables
        run: |
          echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "BOARD=${{ matrix.board }}" >> $GITHUB_ENV

      # === FIX: 动态修复构建脚本，强制使用原生GCC编译宿主机工具 ===
      # 解决了用交叉编译器编译宿主机代码导致的 "missing binary operator" 错误。
      - name: Patch Host Tool Build Command
        run: |
          # 找到调用 hvisor-tool 构建的脚本
          SCRIPT_PATH="platform/${{ matrix.arch }}/${{ matrix.board }}/test/systemtest/trootfs_deploy.sh"
          if [ -f "$SCRIPT_PATH" ]; then
            echo "Patching $SCRIPT_PATH to use native gcc for host tools..."
            # 将错误的交叉编译命令替换为正确的原生编译命令
            sed -i 's/make all ARCH=arm64/make all CC=gcc/g' "$SCRIPT_PATH"
            sed -i 's/make all ARCH=riscv64/make all CC=gcc/g' "$SCRIPT_PATH"
            echo "Patch applied successfully."
          else
            echo "Warning: Build script $SCRIPT_PATH not found. Skipping patch."
          fi

      - name: Run System Test
        run: make stest

  # 此作业很轻量，保持不变
  license-checker:
    name: license-checker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: License Check
        run: |
          set -x
          ./tools/license_checker.sh